name: Fresh AOSP Repo Sync on EC2 with Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup_aosp:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Set EC2 Instance Details
        run: |
          echo "INSTANCE_ID=i-072a52eaa9bc96feb" >> $GITHUB_ENV
          echo "INSTANCE_IP=16.170.171.93" >> $GITHUB_ENV

      - name: Setup SSH Key for EC2 Access
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > private-key.pem
          chmod 600 private-key.pem

      - name: Install Docker on EC2
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            sudo apt update && sudo apt install -y docker.io
            sudo usermod -aG docker ubuntu
            newgrp docker
            sudo systemctl restart docker
          EOF

      - name: Check Disk Space & Memory
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            echo "Checking system resources..."
            df -h
            free -h
          EOF

      - name: Check and Use Prebuilt Docker Image
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            IMAGE_EXISTS=\$(docker images -q doredlap/aosp-builder:latest)
            if [[ -n "\$IMAGE_EXISTS" ]]; then
              echo "Docker image found, running container..."
              docker run -d --name aosp-container --restart unless-stopped -v /home/ubuntu/aosp:/workspace doredlap/aosp-builder:latest
            else
              echo "Docker image not found, building..."
              mkdir -p /home/ubuntu/aosp && cd /home/ubuntu/aosp
              echo "FROM ubuntu:20.04" > Dockerfile
              echo "RUN apt update && apt install -y git curl python3 python3-pip" >> Dockerfile
              echo "WORKDIR /workspace/Aosp_build" >> Dockerfile
              docker build -t doredlap/aosp-builder:latest .
              docker login -u "doredlap" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"
              docker push doredlap/aosp-builder:latest
              docker run -d --name aosp-container --restart unless-stopped -v /home/ubuntu/aosp:/workspace/Aosp_build doredlap/aosp-builder:latest
            fi
          EOF

      - name: Check if Docker Container Started Correctly
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            docker ps -a
            docker logs aosp-container
          EOF

      - name: Ensure Log Directory Exists
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            mkdir -p /workspace/logs
            touch /workspace/logs/repo_sync.log
          EOF

      - name: Clear Repo and Perform Fresh Sync
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o TCPKeepAlive=yes -o ConnectTimeout=30 ubuntu@${INSTANCE_IP} << EOF
            echo "Clearing old repo files..."
            docker exec aosp-container bash -c "
              rm -rf /workspace/.repo &&
              mkdir -p /workspace/logs
              echo 'Initializing fresh repo sync...'
              repo init -u https://android.googlesource.com/platform/manifest --depth=1
              for i in {1..3}; do
                repo sync -c -j4 2>&1 | tee /workspace/logs/repo_sync.log && break || sleep 10
              done
            "
          EOF

      - name: Display Sync Logs
        run: |
          ssh -tt -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} << EOF
            cat /workspace/logs/repo_sync.log
          EOF
